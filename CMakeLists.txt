
set(CMAKE_CUDA_COMPILER "/usr/local/cuda-11.6/bin/nvcc")
project(tensor-compiler-gpu LANGUAGES C CXX CUDA)
cmake_minimum_required(VERSION 3.5)
include(CheckLanguage)
check_language(CUDA)
# set(CMAKE_C_COMPILER "/usr/local/cuda-10.0/bin//nvcc")
# set(CMAKE_CXX_COMPILER "/usr/local/cuda-10.0/bin//nvcc")
set(CMAKE_CUDA_ARCHITECTURES "80")
SET(CUDA_SEPARABLE_COMPILATION ON)
include_directories("/usr/local/cuda-11.6/include")
# link_directories("/usr/local/cuda-11.6/lib64" "/usr/local/cudnn-11.2/lib64")
include_directories("/usr/local/cudnn-11.2/include")
link_directories("/usr/local/cudnn-11.2/lib64")
# if(${CMAKE_BUILD_TYPE} EQUAL "Debug")
#   message(INFO "Build with debug option")
#   add_compile_options("-g -G -O0")
# endif()
# set(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};-G;")

include_directories("third_party/libnpy/include")
# add_compile_options(-fno-stack-protector)

# add_executable(tmp src/learn_cuda/tmp.cu)
# add_executable(opt_conv_tensorcore src/learn_cuda/opt_conv_tensorcore.cu)
# add_executable(opt_matmul_tensorcore src/learn_cuda/opt_matmul_tensorcore.cu)

add_executable(reduce_using_reg src/learn_cuda/reduce_using_reg.cu)
add_executable(add src/learn_cuda/Add.cu)
add_executable(reduce src/learn_cuda/Reduce.cu)
add_executable(normalize src/learn_cuda/normalize.cu)
add_executable(sobel src/learn_cuda/sobel.cu)
add_executable(cudnn_conv src/learn_cuda/cudnn_conv.cu)
add_executable(pointwise_conv src/learn_cuda/pointwise_conv.cu)
add_executable(learn_shuffle src/learn_cuda/learn_shuffle.cu)
# file(GLOB FUSE_SRC_FILES src/operator_fusion/efficientnet/*.cu)
set(EFFICIENT_NET_PATH "src/operator_fusion/efficientnet/")
add_executable(fused_pointwise_pointwise_main ${EFFICIENT_NET_PATH}/fused_pointwise_pointwise_main.cu)
add_executable(fused_pointwise_depthwise_main ${EFFICIENT_NET_PATH}/fused_pointwise_depthwise_main.cu)
add_executable(fused_micro_operators_main ${EFFICIENT_NET_PATH}/fused_micro_operators_main.cu)
add_executable(cudnn_infer_ops src/operator_fusion/transformer/cudnn_infer_ops.cu)
add_executable(swin_transformer_mlp src/operator_fusion/transformer/swin_transformer_mlp_main.cu)
add_executable(gemm_spy src/operator_fusion/transformer/gemm_spy.cu)

# add_executable(fused_pointwise_pointwise_conv src/operator_fusion/efficientnet/fused_pointwise_pointwise_main.cu src/operator_fusion/efficientnet/pointwise_112_112_144_6.cu)
# add_executable(fused_pointwise_pointwise_conv ${FUSE_SRC_FILES})
# add_executable(tvmgen src/tvm_codegen/fused_matmul_main.cu src/tvm_codegen/block_fuse_d2l_matmul_kernel0 /tmp/mmult_kernel0.cu)

add_executable(lstm_main src/lstm/lstm_main.cu)
# add_executable(lstm_wavefront_timesteps src/lstm/lstm_wavefront_timesteps.cu) 
add_executable(seq2seq src/lstm/seq2seq.cu)
add_executable(lstm_cpu src/lstm/lstm_cpu.cpp)
add_executable(test_atomic_add src/block_sync/test_atomic_add.cu)
add_executable(cu_fused_pw_dw_conv src/operator_fusion/fused_depthwise_pointwise_conv.cu)
add_executable(transformer_query_key_softmax_main src/operator_fusion/transformer/transformer_query_key_softmax_main.cu)
add_executable(swin_transformer_query_key_softmax_main src/operator_fusion/transformer/swin_transformer_query_key_softmax_main.cu)

# set_target_properties(lstm_wavefront_magic PROPERTIES CUDA_ARCHITECTURES "70;75;80")
target_link_libraries(cudnn_conv cudnn)
target_link_libraries(cudnn_infer_ops cudnn cuda cublas)
