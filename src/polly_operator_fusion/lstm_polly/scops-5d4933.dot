digraph "Scop Graph for 'lstm_cell_naive' function" {
	label="Scop Graph for 'lstm_cell_naive' function";

	Node0x489a770 [shape=record,label="{%6:\l  %7 = alloca [4 x [256 x float]], align 16\l  %8 = alloca [4 x [256 x float]], align 16\l  %9 = alloca [4 x [256 x float]], align 16\l  br label %.split\l}"];
	Node0x489a770 -> Node0x48a1450;
	Node0x48a1450 [shape=record,label="{.split:                                           \l  br label %.preheader11\l}"];
	Node0x48a1450 -> Node0x48a0420;
	Node0x48a0420 [shape=record,label="{.preheader11:                                     \l  %indvars.iv38 = phi i64 [ 0, %.split ], [ %indvars.iv.next39, %42 ]\l  br label %10\l}"];
	Node0x48a0420 -> Node0x48a2d40;
	Node0x48a2d40 [shape=record,label="{%10:\l10:                                               \l  %indvars.iv26 = phi i64 [ 0, %.preheader11 ], [ %indvars.iv.next27, %20 ]\l  %11 = getelementptr inbounds [4 x [256 x float]], [4 x [256 x float]]* %7,\l... i64 0, i64 %indvars.iv38, i64 %indvars.iv26\l  store float 0.000000e+00, float* %11, align 4\l  br label %12\l}"];
	Node0x48a2d40 -> Node0x48a3190;
	Node0x48a3190 [shape=record,label="{%12:\l12:                                               \l  %indvars.iv23 = phi i64 [ 0, %10 ], [ %indvars.iv.next24, %12 ]\l  %13 = getelementptr inbounds float, float* %0, i64 %indvars.iv23\l  %14 = load float, float* %13, align 4\l  %15 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]*\l... %3, i64 %indvars.iv38, i64 %indvars.iv26, i64 %indvars.iv23\l  %16 = load float, float* %15, align 4\l  %17 = fmul float %14, %16\l  %18 = load float, float* %11, align 4\l  %19 = fadd float %18, %17\l  store float %19, float* %11, align 4\l  %indvars.iv.next24 = add nuw nsw i64 %indvars.iv23, 1\l  %exitcond25 = icmp ne i64 %indvars.iv.next24, 256\l  br i1 %exitcond25, label %12, label %20\l}"];
	Node0x48a3190 -> Node0x48a3190[constraint=false];
	Node0x48a3190 -> Node0x48a1ab0;
	Node0x48a1ab0 [shape=record,label="{%20:\l20:                                               \l  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1\l  %exitcond28 = icmp ne i64 %indvars.iv.next27, 256\l  br i1 %exitcond28, label %10, label %.preheader10\l}"];
	Node0x48a1ab0 -> Node0x48a2d40[constraint=false];
	Node0x48a1ab0 -> Node0x48a3840;
	Node0x48a3840 [shape=record,label="{.preheader10:                                     \l  br label %21\l}"];
	Node0x48a3840 -> Node0x48a1ad0;
	Node0x48a1ad0 [shape=record,label="{%21:\l21:                                               \l  %indvars.iv32 = phi i64 [ 0, %.preheader10 ], [ %indvars.iv.next33, %31 ]\l  %22 = getelementptr inbounds [4 x [256 x float]], [4 x [256 x float]]* %8,\l... i64 0, i64 %indvars.iv38, i64 %indvars.iv32\l  store float 0.000000e+00, float* %22, align 4\l  br label %23\l}"];
	Node0x48a1ad0 -> Node0x48a3de0;
	Node0x48a3de0 [shape=record,label="{%23:\l23:                                               \l  %indvars.iv29 = phi i64 [ 0, %21 ], [ %indvars.iv.next30, %23 ]\l  %24 = getelementptr inbounds float, float* %2, i64 %indvars.iv29\l  %25 = load float, float* %24, align 4\l  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]*\l... %3, i64 %indvars.iv38, i64 %indvars.iv32, i64 %indvars.iv29\l  %27 = load float, float* %26, align 4\l  %28 = fmul float %25, %27\l  %29 = load float, float* %22, align 4\l  %30 = fadd float %29, %28\l  store float %30, float* %22, align 4\l  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1\l  %exitcond31 = icmp ne i64 %indvars.iv.next30, 256\l  br i1 %exitcond31, label %23, label %31\l}"];
	Node0x48a3de0 -> Node0x48a3de0[constraint=false];
	Node0x48a3de0 -> Node0x48a1b90;
	Node0x48a1b90 [shape=record,label="{%31:\l31:                                               \l  %indvars.iv.next33 = add nuw nsw i64 %indvars.iv32, 1\l  %exitcond34 = icmp ne i64 %indvars.iv.next33, 256\l  br i1 %exitcond34, label %21, label %.preheader9\l}"];
	Node0x48a1b90 -> Node0x48a1ad0[constraint=false];
	Node0x48a1b90 -> Node0x489ea00;
	Node0x489ea00 [shape=record,label="{.preheader9:                                      \l  br label %32\l}"];
	Node0x489ea00 -> Node0x489ea20;
	Node0x489ea20 [shape=record,label="{%32:\l32:                                               \l  %indvars.iv35 = phi i64 [ 0, %.preheader9 ], [ %indvars.iv.next36, %32 ]\l  %33 = getelementptr inbounds [4 x [256 x float]], [4 x [256 x float]]* %7,\l... i64 0, i64 %indvars.iv38, i64 %indvars.iv35\l  %34 = load float, float* %33, align 4\l  %35 = getelementptr inbounds [4 x [256 x float]], [4 x [256 x float]]* %8,\l... i64 0, i64 %indvars.iv38, i64 %indvars.iv35\l  %36 = load float, float* %35, align 4\l  %37 = fadd float %34, %36\l  %38 = getelementptr inbounds float, float* %5, i64 %indvars.iv35\l  %39 = load float, float* %38, align 4\l  %40 = fadd float %37, %39\l  %41 = getelementptr inbounds [4 x [256 x float]], [4 x [256 x float]]* %9,\l... i64 0, i64 %indvars.iv38, i64 %indvars.iv35\l  store float %40, float* %41, align 4\l  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1\l  %exitcond37 = icmp ne i64 %indvars.iv.next36, 256\l  br i1 %exitcond37, label %32, label %42\l}"];
	Node0x489ea20 -> Node0x489ea20[constraint=false];
	Node0x489ea20 -> Node0x489fef0;
	Node0x489fef0 [shape=record,label="{%42:\l42:                                               \l  %indvars.iv.next39 = add nuw nsw i64 %indvars.iv38, 1\l  %exitcond40 = icmp ne i64 %indvars.iv.next39, 4\l  br i1 %exitcond40, label %.preheader11, label %.preheader8\l}"];
	Node0x489fef0 -> Node0x48a0420[constraint=false];
	Node0x489fef0 -> Node0x489e920;
	Node0x489e920 [shape=record,label="{.preheader8:                                      \l  br label %43\l}"];
	Node0x489e920 -> Node0x48a5490;
	Node0x48a5490 [shape=record,label="{%43:\l43:                                               \l  %indvars.iv20 = phi i64 [ 0, %.preheader8 ], [ %indvars.iv.next21, %43 ]\l  %44 = getelementptr inbounds float, float* %1, i64 %indvars.iv20\l  %45 = load float, float* %44, align 4\l  %46 = getelementptr inbounds [4 x [256 x float]], [4 x [256 x float]]* %9,\l... i64 0, i64 2, i64 %indvars.iv20\l  %47 = load float, float* %46, align 4\l  %48 = fadd float %47, 1.000000e+00\l  %49 = fmul float %45, %48\l  %50 = getelementptr inbounds [4 x [256 x float]], [4 x [256 x float]]* %9,\l... i64 0, i64 0, i64 %indvars.iv20\l  %51 = load float, float* %50, align 4\l  %52 = getelementptr inbounds [4 x [256 x float]], [4 x [256 x float]]* %9,\l... i64 0, i64 1, i64 %indvars.iv20\l  %53 = load float, float* %52, align 4\l  %54 = fmul float %51, %53\l  %55 = fadd float %49, %54\l  store float %55, float* %44, align 4\l  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1\l  %exitcond22 = icmp ne i64 %indvars.iv.next21, 256\l  br i1 %exitcond22, label %43, label %.preheader\l}"];
	Node0x48a5490 -> Node0x48a5490[constraint=false];
	Node0x48a5490 -> Node0x489ff10;
	Node0x489ff10 [shape=record,label="{.preheader:                                       \l  br label %56\l}"];
	Node0x489ff10 -> Node0x48a39a0;
	Node0x48a39a0 [shape=record,label="{%56:\l56:                                               \l  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %56 ]\l  %57 = getelementptr inbounds float, float* %1, i64 %indvars.iv\l  %58 = load float, float* %57, align 4\l  %59 = getelementptr inbounds [4 x [256 x float]], [4 x [256 x float]]* %9,\l... i64 0, i64 3, i64 %indvars.iv\l  %60 = load float, float* %59, align 4\l  %61 = fmul float %58, %60\l  %62 = getelementptr inbounds float, float* %2, i64 %indvars.iv\l  store float %61, float* %62, align 4\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond = icmp ne i64 %indvars.iv.next, 256\l  br i1 %exitcond, label %56, label %63\l}"];
	Node0x48a39a0 -> Node0x48a39a0[constraint=false];
	Node0x48a39a0 -> Node0x48a1390;
	Node0x48a1390 [shape=record,label="{%63:\l63:                                               \l  ret void\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x4833d60 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x48a0440 {
            label = "";
            style = filled;
            color = 3            subgraph cluster_0x4841950 {
              label = "";
              style = solid;
              color = 5
              subgraph cluster_0x48409a0 {
                label = "";
                style = solid;
                color = 7
                subgraph cluster_0x4840920 {
                  label = "";
                  style = solid;
                  color = 9
                  Node0x48a3190;
                }
                Node0x48a2d40;
                Node0x48a1ab0;
              }
              subgraph cluster_0x48408a0 {
                label = "";
                style = solid;
                color = 7
                subgraph cluster_0x4840820 {
                  label = "";
                  style = solid;
                  color = 9
                  Node0x48a3de0;
                }
                Node0x48a1ad0;
                Node0x48a1b90;
              }
              subgraph cluster_0x48407a0 {
                label = "";
                style = solid;
                color = 7
                Node0x489ea20;
              }
              Node0x48a0420;
              Node0x48a3840;
              Node0x489ea00;
              Node0x489fef0;
            }
            subgraph cluster_0x4854350 {
              label = "";
              style = solid;
              color = 5
              Node0x48a5490;
            }
            subgraph cluster_0x4854510 {
              label = "";
              style = solid;
              color = 5
              Node0x48a39a0;
            }
            Node0x489e920;
            Node0x489ff10;
          }
          Node0x489a770;
          Node0x48a1450;
          Node0x48a1390;
        }
}
